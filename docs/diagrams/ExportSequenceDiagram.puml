@startuml
title Sequence Diagram for ExportCommand

!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":ExportCommandParser" as ECP LOGIC_COLOR
participant "<<class>> \n FilePathResolverUtils" as FRU LOGIC_COLOR
participant ":ExportCommand" as EC LOGIC_COLOR
participant " <<class>> \n AddressBookFormatConverter" as ABC LOGIC_COLOR
end box
participant Files as F STORAGE_COLOR_T1
box Storage STORAGE_COLOR_T1
participant ":JsonSerializableAddressBook" as JsonSerializableAddressBook STORAGE_COLOR
end box

[-> ECP: parse( arguments )
activate ECP
ECP -> FRU : verifyFileTypePresentAndValid()
opt filetype != null || filename != null == true
ECP -> FRU : resolveFilePath()

activate FRU
FRU --> ECP : Path
deactivate FRU

end
ECP -> EC : new ExportCommand(fileType, path)
activate EC
return ExportCommand
[<-- ECP : ExportCommand
deactivate ECP
'Hidden arrow to position the destroy marker below the end of the activation bar.
ECP -[hidden]->
destroy ECP

[-> EC : execute(Model model)
activate EC
alt filetype == json
EC -> ABC: exportToJson(path)
activate ABC
create JsonSerializableAddressBook
ABC -> JsonSerializableAddressBook : new JsonSerializableAddressBook
activate JsonSerializableAddressBook
return JsonSerializableAddressBook
ABC -> F : write to path
deactivate ABC
else filetype == csv
EC -> ABC : exportToCsv(path)
activate ABC
create JsonSerializableAddressBook
ABC -> JsonSerializableAddressBook : new JsonSerializableAddressBook
activate JsonSerializableAddressBook
return JsonSerializableAddressBook
ABC -> ABC : addressBookToCsv(JsonSerializableAddressBook)
activate ABC
deactivate ABC
ABC -> F : write to path
deactivate ABC
end
[<-- EC  : CommandResult
deactivate EC
'Hidden arrow to position the destroy marker below the end of the activation bar.
EC -[hidden]->
destroy EC
@enduml
