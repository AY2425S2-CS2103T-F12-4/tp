@startuml

title Sequence Diagram for ImportCommand

!include style.puml
skinparam ArrowFontStyle plain
box Logic LOGIC_COLOR_T1
participant ": ImportCommandParser" as ICP LOGIC_COLOR
participant "<<class>> \n FilePathResolverUtils" as FRU LOGIC_COLOR
participant ": ImportCommand" as IC LOGIC_COLOR
participant "<<class>> \n AddressBookFormatConverter" as ABC LOGIC_COLOR
end box
box Model MODEL_COLOR_T1
participant ": Model" as M MODEL_COLOR
end box
box Storage STORAGE_COLOR_T1
participant ": JsonSerializableAddressBook" as JsonSerializableAddressBook STORAGE_COLOR
end box

[-> ICP: parse(String args)
activate ICP
ICP -> FRU: verifyFileTypePresentAndValid()
ICP -> FRU: resolveFilePath()
FRU --> ICP: Path
create IC
ICP -> IC: new ImportCommand(fileType, path, writeMode)
activate IC
return ImportCommand
[<-- ICP :ImportCommand
deactivate ICP
'Hidden arrow to position the destroy marker below the end of the activation bar.
ICP -[hidden]-> ICP
destroy ICP
[-> IC: execute(Model model)
activate IC

alt fileType == "json"
    IC -> ABC: importFromJson(path)
    activate ABC
    ABC --> IC : JsonSerializableAddressBook
    deactivate ABC
else fileType == "csv"
    IC -> ABC: importFromCsv(path)
    activate ABC
    ABC -> JsonSerializableAddressBook : aggregatePersons
    activate JsonSerializableAddressBook
    return JsonSerializableAddressBook
    ABC --> IC : JsonSerializableAddressBook
    deactivate ABC
end

alt mode == "overwrite"
    IC -> IC: handleOverwriteMode(model, importedData)
    IC -> IC: aggregateImportedData(importedData)
    IC -> M: setAddressBook(new AddressBook)
else mode == "append"
    IC -> IC: handleAppendMode(model, importedData)
    IC -> IC: processImportedPersonsWhenAppend(model, importedData)
    IC -> IC: aggregateImportedData(importedData)
    IC -> M: addPerson(...) * n
end

[<-- IC : CommandResult
deactivate IC
'Hidden arrow to position the destroy marker below the end of the activation bar.
IC -[hidden]-> IC
destroy IC


@enduml
